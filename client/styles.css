  <!-- <link rel='stylesheet' type='css' href='styles.css'>
    <style>
    div{ width:500px; height:60px; background:#000; padding:5px; margin:50px auto; }
    div > div > audio{  width:500px; background:#000; float:left;  }
    div > canvas{ width:500px; height:30px; background:#002D3C; float:left; }
</style> -->

body {
    background-color: #aaa;
    padding: 10px;
}

        // http://www.developphp.com/video/JavaScript/Analyser-Bars-Animation-HTML-Audio-API-Tutorial

        // Create a new instance of an audio object and adjust some of its properties
        /*
        document.getElementById('player').onloadstart=function(){
        var audio = new Audio();
        audio.src = document.getElementById('player').src;
        audio.controls = false;
        audio.loop = false;
        audio.autoplay = true;
        //audio.muted = true;
        // Establish all variables that your Analyser will use
        var canvas, ctx, source, context, analyser, fbc_array, bars, bar_x, bar_width, bar_height;
        // Initialize the MP3 player after the page loads all of its HTML into the window
        //window.addEventListener("load", initMp3Player, false);

        initMp3Player();
        function initMp3Player(){
            document.getElementById('player').appendChild(audio);
            context = new AudioContext(); // AudioContext object instance
            analyser = context.createAnalyser(); // AnalyserNode method
            canvas = document.getElementById('analyzer');
            ctx = canvas.getContext('2d');
            // Re-route audio playback into the processing graph of the AudioContext
            source = context.createMediaElementSource(audio); 
            source.connect(analyser);
            analyser.connect(context.destination);
            frameLooper();
        }
        // frameLooper() animates any style of graphics you wish to the audio frequency
        // Looping at the default frame rate that the browser provides(approx. 60 FPS)
        function frameLooper(){
            window.requestAnimationFrame(frameLooper);
            fbc_array = new Uint8Array(analyser.frequencyBinCount);
            analyser.getByteFrequencyData(fbc_array);
            ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear the canvas
            ctx.fillStyle = '#00CCFF'; // Color of the bars
            bars = 100;
            for (var i = 0; i < bars; i++) {
                bar_x = i * 3;
                bar_width = 2;
                bar_height = -(fbc_array[i] / 2);
                //  fillRect( x, y, width, height ) // Explanation of the parameters below
                ctx.fillRect(bar_x, canvas.height, bar_width, bar_height);
            }
        }}

        /*
        document.getElementById('player').onloadstart=function(){
        var audio = document.getElementById('player');
        audio.src ='https://s3-us-west-1.amazonaws.com/hr-mytunes/data/03+Age+Ain%27t+Nothing+But+A+Number.mp3'; //document.getElementsByTagName("player").src;
        audio.controls = true;
        audio.loop = true;
        audio.autoplay = true;
        // Establish all variables that your Analyser will use
        var canvas, ctx, source, context, analyser, fbc_array, bars, bar_x, bar_width, bar_height;
        // Initialize the MP3 player after the page loads all of its HTML into the window
    
        //initMp3Player();
        //function initMp3Player(){
            var canvas, ctx, source, context, analyser, fbc_array, bars, bar_x, bar_width, bar_height;
        context = new webkitAudioContext();
            //document.getElementById('player').appendChild(audio);
            //context = new webkitAudioContext(); // AudioContext object instance
            //context = new AudioContext();
            //context = window.webkitAudioContext;//document.getElementById('player');
            analyser = context.createAnalyser(); // AnalyserNode method
            canvas = document.getElementById('analyzer');
            ctx = canvas.getContext('2d');
            // Re-route audio playback into the processing graph of the AudioContext
            source = context.createMediaElementSource(audio); 
            source.connect(analyser);
            analyser.connect(context.destination);
            frameLooper();
        //}
        // frameLooper() animates any style of graphics you wish to the audio frequency
        // Looping at the default frame rate that the browser provides(approx. 60 FPS)
        function frameLooper(){
            window.webkitRequestAnimationFrame(frameLooper);
            fbc_array = new Uint8Array(analyser.frequencyBinCount);
            analyser.getByteFrequencyData(fbc_array);
            ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear the canvas
            ctx.fillStyle = '#00CCFF'; // Color of the bars
            bars = 100;
            for (var i = 0; i < bars; i++) {
                bar_x = i * 3;
                bar_width = 2;
                bar_height = -(fbc_array[i] / 2);
                //  fillRect( x, y, width, height ) // Explanation of the parameters below
                ctx.fillRect(bar_x, canvas.height, bar_width, bar_height);
            }
            }
            };*/
